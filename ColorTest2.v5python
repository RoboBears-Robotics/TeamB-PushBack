{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\nimport math\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n# AI Vision Color Descriptions\nai_vision_1__RedBlock = Colordesc(1, 195, 74, 119, 13, 0.91)\nai_vision_1__BlueBlock = Colordesc(2, 41, 100, 159, 8, 0.27)\n# AI Vision Code Descriptions\nai_vision_1 = AiVision(Ports.PORT1, ai_vision_1__RedBlock, ai_vision_1__BlueBlock)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\nai_vision_1_objects = []\nscreen_precision = 0\nconsole_precision = 0\nmyVariable = 0\n\ndef checkBlue():\n    global myVariable, ai_vision_1_objects, screen_precision, console_precision\n    brain.screen.set_font(FontType.MONO40)\n    brain.screen.clear_row(1)\n    brain.screen.set_cursor(brain.screen.row(), 1)\n    brain.screen.set_cursor(1, 1)\n    ai_vision_1_objects = ai_vision_1.take_snapshot(ai_vision_1__BlueBlock)\n    if ai_vision_1_objects and len(ai_vision_1_objects) > 0:\n        brain.screen.print(\"Blue Object Found\")\n    else:\n        brain.screen.print(\"No Blue Object\")\n\ndef checkRed():\n    global myVariable, ai_vision_1_objects, screen_precision, console_precision\n    brain.screen.set_font(FontType.MONO40)\n    brain.screen.clear_row(3)\n    brain.screen.set_cursor(brain.screen.row(), 1)\n    brain.screen.set_cursor(3, 1)\n    ai_vision_1_objects = ai_vision_1.take_snapshot(ai_vision_1__RedBlock)\n    if ai_vision_1_objects and len(ai_vision_1_objects) > 0:\n        brain.screen.print(\"Red Object Found\")\n    else:\n        brain.screen.print(\"No Red Object\")\n\ndef when_started1():\n    global myVariable, ai_vision_1_objects, screen_precision, console_precision\n    while True:\n        checkBlue()\n        checkRed()\n        wait(0.1, SECONDS)\n        wait(5, MSEC)\n\nwhen_started1()\n","textLanguage":"python","robotConfig":[{"port":[1],"name":"ai_vision_1","customName":false,"deviceType":"AIVision","deviceClass":"aivision","setting":{"config":"{\"colors\":[{\"id\":1,\"name\":\"RedBlock\",\"nameValid\":\"Valid\",\"lastValidName\":\"RedBlock\",\"red\":195.33214433416046,\"green\":74.49502860490763,\"blue\":118.85193513923353,\"hueRange\":13,\"saturationRange\":0.91},{\"id\":2,\"name\":\"BlueBlock\",\"nameValid\":\"Valid\",\"lastValidName\":\"BlueBlock\",\"red\":41.099903969270166,\"green\":100.36658130601792,\"blue\":159.33114596670936,\"hueRange\":8,\"saturationRange\":0.27}],\"codes\":[],\"AIObjects\":false,\"AIModelMetadata\":{\"id\":0,\"version\":1,\"name\":\"Classroom Objects\"},\"aiModelDropDownValue\":0}","isConfigured":"false"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.62.0","minVersion":"4.60.0","fileFormat":"2.0.0","targetBrainGen":"Second","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"aiVisionSettings":{"colors":[],"codes":[],"tags":true,"AIObjects":true,"AIObjectModel":[],"aiModelDropDownValue":null},"target":"Physical"}